<!DOCTYPE html>
<html>

<head>
    <title>

    </title>
    <link rel="stylesheet" type="text/css" href="//cdn.datatables.net/1.10.20/css/jquery.dataTables.min.css">
</head>
<style>
    * {
        box-sizing: border-box;
    }

    table {
        border-spacing: 0px;
        border-collapse: collapse;
        width: 100%;
        margin: auto;
        background-color: transparent;
        /* Change the background-color of table here */
        text-align: left;
        /* Change the text-alignment of table here */
    }

    th {
        font-weight: bold;
        border: 1px solid #cccccc;

        padding: 8px;
    }

    td {
        border: 1px solid #cccccc;

        padding: 8px;
    }

    tr {
        background-color: transparent;

    }

    tr:nth-of-type(2n+1) {
        background-color: #eeeeee;
        /* Change the background-color of odd rows here */
    }

    tr th {
        background-color: #dddddd;
        /* Change the background-color of heading here */
    }

    tr {
        -moz-transition: background-color 300ms ease-in-out 0s;
        -ms-transition: background-color 300ms ease-in-out 0s;
        -o-transition: background-color 300ms ease-in-out 0s;
        -webkit-transition: background-color 300ms ease-in-out 0s;
        transition: background-color 300ms ease-in-out 0s;
    }

    tr:hover {
        background-color: #fff176;
        /* Change the hover background-color of rows here */
    }

    /* Removing left and right border of rows for modern UIs */

    tr {
        border-top: 1px solid #cccccc;
        border-bottom: 1px solid #cccccc;
    }

    th,
    td {
        border: none;
    }

    .user-name-class {
        cursor: pointer;
    }

    .confirm-button {
        display: none;
        cursor: pointer;
    }
</style>

<body>
    <button id="logOutHR" style="float: right; padding:5px; border-radius:10%">Log Out</button>
    <table id="users_table">
        <thead>
            <th>Name</th>
            <th>Email</th>
            <th>Audio Name</th>
            <th>Audio Number</th>
            <th>Start Time</th>
            <th>End Time</th>
            <th>Score</th>
            <th>Status
                {{!-- <span id="export-work" style="display: none;">&emsp; &emsp;<button id="export-button">EXPORT</button></span> --}}
            </th>
        </thead>
        <tbody>
        </tbody>
    </table>
</body>
<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js"></script>
<script src="https://cdn.datatables.net/1.10.21/js/jquery.dataTables.min.js"></script>
<script src="https://cdn.datatables.net/buttons/1.6.2/js/dataTables.buttons.min.js"></script>
<script src="https://cdn.datatables.net/buttons/1.6.2/js/buttons.flash.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.1.3/jszip.min.js"></script>
<script src="https://cdn.datatables.net/buttons/1.6.2/js/buttons.html5.min.js"></script>
<script src="https://cdn.datatables.net/buttons/1.6.2/js/buttons.print.min.js"></script>
<!-- Amplitude -->
<script type="text/javascript">
    (function (e, t) {
        var n = e.amplitude || {
            _q: [],
            _iq: {}
        };
        var r = t.createElement("script");
        r.type = "text/javascript";
        r.integrity =
            "sha384-RsEu4WZflrqYcEacpfoGSib3qaSvdYwT4D+DrWqeBuDarSzjwUQR1jO8gDiXZd0E";
        r.crossOrigin = "anonymous";
        r.async = true;
        r.src = "https://cdn.amplitude.com/libs/amplitude-6.2.0-min.gz.js";
        r.onload = function () {
            if (!e.amplitude.runQueuedFunctions) {
                //console.log("[Amplitude] Error: could not load SDK");
            }
        };
        var i = t.getElementsByTagName("script")[0];
        i.parentNode.insertBefore(r, i);


        function s(e, t) {
            e.prototype[t] = function () {
                this._q.push([t].concat(Array.prototype.slice.call(arguments, 0)));
                return this;
            };
        }
        var o = function () {
            this._q = [];
            return this;
        };
        var a = [
            "add",
            "append",
            "clearAll",
            "prepend",
            "set",
            "setOnce",
            "unset",
        ];
        for (var u = 0; u < a.length; u++) {
            s(o, a[u]);
        }
        n.Identify = o;
        var c = function () {
            this._q = [];
            return this;
        };
        var l = [
            "setProductId",
            "setQuantity",
            "setPrice",
            "setRevenueType",
            "setEventProperties",
        ];
        for (var p = 0; p < l.length; p++) {
            s(c, l[p]);
        }
        n.Revenue = c;
        var d = [
            "init",
            "logEvent",
            "logRevenue",
            "setUserId",
            "setUserProperties",
            "setOptOut",
            "setVersionName",
            "setDomain",
            "setDeviceId",
            "enableTracking",
            "setGlobalUserProperties",
            "identify",
            "clearUserProperties",
            "setGroup",
            "logRevenueV2",
            "regenerateDeviceId",
            "groupIdentify",
            "onInit",
            "logEventWithTimestamp",
            "logEventWithGroups",
            "setSessionId",
            "resetSessionId",
        ];

        function v(e) {
            function t(t) {
                e[t] = function () {
                    e._q.push([t].concat(Array.prototype.slice.call(arguments, 0)));
                };
            }
            for (var n = 0; n < d.length; n++) {
                t(d[n]);
            }
        }
        v(n);
        n.getInstance = function (e) {
            e = (!e || e.length === 0 ? "$default_instance" : e).toLowerCase();
            if (!n._iq.hasOwnProperty(e)) {
                n._iq[e] = {
                    _q: []
                };
                v(n._iq[e]);
            }
            return n._iq[e];
        };
        e.amplitude = n;
    })(window, document);
    var reqAPIKey = "{{ amplitude_api_key }}";
</script>
<script>
    function logEvent(ampEventName, ampEventProp) {
        //console.log("logging event : " + ampEventName);
        amplitude.getInstance().logEvent(ampEventName, ampEventProp);
    }

    function setUserProp(identifyObj) {
        amplitude.getInstance().Identify(identifyObj);
    }
</script>
<script>
    $(document).ready(() => {
        amplitude.getInstance().init(reqAPIKey, null, {
            includeReferrer: true,
            includeUtm: true,
            includeGclid: true,
        });
    })
</script>
<script>
    var reviewerId = {{ reviewerId }};
    var reviewerEmail = `{{reviewerEmail}}`;
    $(document).ready(function () {
        //console.log(reviewerEmail);

        //Button To Log Out From Table
        $("#logOutHR").on("click", function () {
            window.location.href = `${new URL(window.location).origin}/hr-logout`;
        });

        function recreatingHRTable() {
            $.ajax({
                method: "POST",
                url: "/training-hr-review-table-datas",
                success: function (users_data) {
                    $("#users_table tbody").html("");
                    for (var i = 0; i < users_data.length; i++) {

                        if (users_data[i].status == "PASS") {
                            $("#users_table tbody").append(
                                `<tr data-user-id="${users_data[i].users_audio_id}" data-user-name="${users_data[i].name}">                                
                                <td class="user-name-class">${users_data[i].name}</td>  
                                <td>${users_data[i].email}</td>
                                <td>${users_data[i].audio_name}</td>  
                                <td>${users_data[i].audio_order}</td>              
                                <td>${getNepaliTimeNow(users_data[i].start_time)}</td>
                                <td>${getNepaliTimeNow(users_data[i].end_time)}</td>
                                <td>${users_data[i].overall_score < 0 ? 0 : users_data[i].overall_score}</td>
                                <td><select class="${users_data[i].users_audio_id}"><option>${users_data[i].status}</option><option>FAIL</option></select>
                                    <button class="${users_data[i].users_audio_id} confirm-button">Confirm</button>
                                </td>
                            </tr>`);
                        } else if (users_data[i].status == "FAIL") {
                            $("#users_table tbody").append(
                                `<tr data-user-id="${users_data[i].users_audio_id}" data-user-name="${users_data[i].name}">                                
                                <td class="user-name-class">${users_data[i].name}</td>
                                <td>${users_data[i].email}</td>
                                <td>${users_data[i].audio_name}</td>   
                                <td>${users_data[i].audio_order}</td>             
                                 <td>${getNepaliTimeNow(users_data[i].start_time)}</td>
                                 <td>${getNepaliTimeNow(users_data[i].end_time)}</td>
                                 <td>${users_data[i].overall_score < 0 ? 0 : users_data[i].overall_score}</td>
                                 <td><select class="${users_data[i].users_audio_id}"><option>${users_data[i].status}</option><option>PASS</option></select>
                                    <button class="${users_data[i].users_audio_id} confirm-button">Confirm</button>
                                 </td>
                            </tr>`);
                        } else {
                            $("#users_table tbody").append(
                                `<tr data-user-id="${users_data[i].users_audio_id}" data-user-name="${users_data[i].name}">                                
                                <td class="user-name-class">${users_data[i].name}</td>
                                <td>${users_data[i].email}</td>
                                <td>${users_data[i].audio_name}</td>   
                                <td>${users_data[i].audio_order}</td>             
                                 <td>${getNepaliTimeNow(users_data[i].start_time)}</td>
                                 <td>${getNepaliTimeNow(users_data[i].end_time)}</td>
                                 <td>${users_data[i].overall_score < 0 ? 0 : users_data[i].overall_score}</td>
                                 <td><select class="${users_data[i].users_audio_id}"><option>${users_data[i].status}</option><option>PASS</option><option>FAIL</option><option>RETRY</option></select>
                                    <button class="${users_data[i].users_audio_id} confirm-button">Confirm</button>
                                 </td>
                            </tr>`);
                        }
                    }
                    //DataTable
                    var table = $("#users_table").DataTable();
                    table.destroy();
                    $("#users_table").DataTable({
                        "order": [[4, "desc"]],
                        dom: 'Bfrtip',
                        buttons: [{
                            extend: 'excel',
                            filename: 'training',
                            title: "",
                            text: 'Export to excel',
                            exportOptions: {
                                columns: [0, 1, 2, 3, 4, 5, 6],
                                modifier: {
                                    order: 'current',
                                    page: 'all'
                                },
                                format: {
                                    body: function (data, row, col, node) {
                                        if (col == 7) {
                                            return table
                                                .cell({ row: row, column: col })
                                                .nodes()
                                                .to$()
                                                .find(':selected')
                                                .text()
                                        } else {
                                            return data;
                                        }
                                    }
                                }
                            }
                        }]
                    });
                }
            });
        }

        //calling the function for creating table
        recreatingHRTable();

        //Directing To Segmented Platform on Click
        $("body").on("click", ".user-name-class", function (event) {
            ////console.log("Here");
            var clicked_user_id = event.target.closest("tr").getAttribute("data-user-id");
            var params = {
                clicked_user_id
            }
            $.ajax({
                method: "POST",
                url: "/hr-click-get-user-id",
                data: params,
                success: function (response) {
                    //console.log(response);
                    window.open(
                        //`http://localhost:3000/transcribe?user_id=${clicked_user_id}`,
                        `${new URL(window.location).origin}/training?user_id=${response[0]["user_id"]}&audio_id=${response[0]["audio_id"]}#review`,
                        '_blank' //New Tab
                    );
                }
            })
        });

        //Confirm Button PASS FAIL Changes
        $("#users_table").on("change", (event) => {
            var clicked_button_id = event.target.closest("tr").getAttribute("data-user-id");//This is equal to userId   
            ////console.log(clicked_button_id);         
            confirmButton(clicked_button_id);
        });
        //Displaying confirm button
        function confirmButton(userId) {
            $(`button.${userId}`).show();
            var clickedUserName = event.target.closest("tr").getAttribute("data-user-name");//This is equal to user name   

            //On Confirm Click
            $(`button.${userId}`).on("click", async () => {
                var changedPassFailValue = $(`select.${userId}`).val();
                params = {
                    userId,
                    changedPassFailValue
                }

                await $.ajax({
                    method: "POST",
                    url: "/confirm-pass-fail-hr-review",
                    data: params,
                    success: function () {
                        $(`button.${userId}`).hide();
                        //console.log("Pass Fail Saved");
                        // //console.log(userId);

                        $.ajax({
                            method: "POST",
                            url: "/save-hr-training-logs",
                            data: {
                                reviewerId,
                                user_id: userId,
                                user_name: clickedUserName,
                                user_status: changedPassFailValue,
                                type: "training"
                            },
                            success: function () {
                                $.ajax({
                                    method: "POST",
                                    url: "/get-web-app-id-for-hr",
                                    data: { userId },
                                    success: function (response) {
                                        var status;
                                        //console.log(changedPassFailValue);
                                        if (changedPassFailValue == "PASS") {
                                            status = 7;
                                        } else if (changedPassFailValue == "FAIL") {
                                            status = 6;
                                        } else if (changedPassFailValue == "RETRY") {
                                            status = 4;
                                        }
                                        var mailParams = {
                                            "user_id": `${response[0].web_app_id}`,
                                            "status": status,
                                            "project_type_id": "4"
                                        }

                                         if(status==4){
                                                    $.ajax({
                                                        method:"POST",
                                                        url:"/set-endtime-null-on-retry",
                                                        data:{user_id: userId},
                                                         success: function () {
                                                               console.log("Retry And Null");
                                                                // recreatingHRTable();
                                                            }
                                                    })
                                                }
                                        //console.log(mailParams);
                                        /*
                                        $.ajax({
                                            method: "POST",
                                            url: "{{ webapp_basepath }}/api/set-user-language-project-type-status",
                                            data:mailParams,
                                            success:function(){
                                                //console.log("EMAIl Sent and web app status set");
                                            }
                                        });*/
                                    }
                                })
                            }
                        });
                    }
                });                
               // recreatingHRTable();
            });
        }


        //Function to export data to csv file
        function download_csvFile(csv, fileName) {
            var csvFile;
            var downloadLink;

            //File
            csvFile = new Blob([csv], { type: "text/csv" });

            //link
            downloadLink = document.createElement("a");

            //file name
            downloadLink.download = fileName;

            //link to the file
            downloadLink.href = window.URL.createObjectURL(csvFile);

            //link not diplaying
            downloadLink.style.display = "none";

            //link to our DOM
            document.body.appendChild(downloadLink);
            downloadLink.click();
        }

        function export_htmlTable_to_csv(htmlTable, fileName) {
            var csv = [];
            //selecting valid data
            var rows = document.querySelectorAll("table tbody tr:not(#export-work)");
            for (var i = 0; i < rows.length; i++) {

                var row = [], cols = rows[i].querySelectorAll("td");
                for (var j = 0; j < cols.length - 1; j++) {
                    row.push(cols[j].innerText);
                }
                row.push(cols[cols.length - 1].querySelector("select").value);
                csv.push('"' + row.join('","') + '"');
            }
            //download csv
            download_csvFile(csv.join("\n"), fileName);
        }

        $("#export-button").on("click", () => {
            var html = document.querySelector("table").outerHTML;
            export_htmlTable_to_csv(html, "listExport.csv");
        });
        //Exporting Work End

        //Function to get GTM to Nepali Time
        function getNepaliTimeNow(datetime) {

            if (datetime == null) {
                return null;

            } else {
                var time = new Date(datetime);
                var time_in_nepal = time.toLocaleString("en-US", {
                    timeZone: "Asia/Kathmandu",
                    hour12: false
                });
                return time_in_nepal;

            }
        }

    });

</script>

</html>